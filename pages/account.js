import { collection, getDocs } from "firebase/firestore";
import { useAuth } from "../context/AuthContext";
import { db } from "../firebaseConfig";
import { useFirestore } from "../context/FirestoreContext";
import { useEffect, useState } from "react";
import Head from "next/head";
import Avatar from "@mui/material/Avatar";
import PhotoGallery from "../components/PhotoGallery";
import ActionBar from "../components/ActionBar";

export async function getServerSideProps() {
  const collectionRef = collection(db, "photos");
  const data = await getDocs(collectionRef);
  const photoDocs = data.docs.map((doc) => {
    return { ...doc.data(), id: doc.id };
  });

  return {
    props: {
      ssrPhotoDocs: photoDocs,
    },
  };
}

const Account = ({ ssrPhotoDocs }) => {
  const { user, userData } = useAuth();
  const { photoDocuments } = useFirestore();

  const [filteredDocuments, setFilteredDocuments] = useState([]);
  const [likedPhotos, setLikedPhotos] = useState([]);

  useEffect(() => {
    if (!user) return;
    // if photoDocuments is null use ssrPhotoDocs, else use photoDocuments
    photoDocuments
      ? setFilteredDocuments(
          photoDocuments.filter((doc) => doc.postedBy == user.email)
        )
      : setFilteredDocuments(
          ssrPhotoDocs.filter((doc) => doc.postedBy == user.email)
        );
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [photoDocuments, user]);

  useEffect(() => {
    if (!userData) return;
    photoDocuments
      ? setLikedPhotos(
          photoDocuments.filter((doc) => userData.likedPhotos.includes(doc.id))
        )
      : setLikedPhotos(
          ssrPhotoDocs.filter((doc) => userData.likedPhotos.includes(doc.id))
        );
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [userData]);

  return (
    user &&
    userData && (
      <main>
        <Head>
          <title>Photo Gallery | Account</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className={`flex justify-center`}>
          <div
            className={`bg-white flex flex-col items-center py-5 my-2 w-2/3`}
          >
            <div>
              <Avatar
                src={user.photoURL}
                imgProps={{ referrerPolicy: "no-referrer" }}
              />
            </div>
            <div>{user.displayName}</div>
            <div>{user.email}</div>
          </div>
        </div>

        <ActionBar />

        <div>
          <div>
            My Photos
            <PhotoGallery photoDocuments={filteredDocuments} />
          </div>
          {likedPhotos.length ? (
            <div>
              LikedPhotos
              <PhotoGallery photoDocuments={likedPhotos} />
            </div>
          ) : (
            <></>
          )}
        </div>
      </main>
    )
  );
};

export default Account;
