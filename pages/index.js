import { collection, getDocs } from "firebase/firestore";
import Head from "next/head";
import ActionBar from "../components/ActionBar";
import { db } from "../firebaseConfig";
import { useFirestore } from "../context/FirestoreContext";
import PhotoGallery from "../components/PhotoGallery";
import { useState } from "react";
import Snackbar from '@mui/material/Snackbar';
import Alert from '@mui/material/Alert';

export async function getServerSideProps() {
  const collectionRef = collection(db, "photos");
  const data = await getDocs(collectionRef);
  const photoDocs = data.docs.map((doc) => {
    return { ...doc.data(), id: doc.id };
  });

  return {
    props: {
      ssrPhotoDocs: photoDocs,
    },
  };
}

export default function Home({ ssrPhotoDocs }) {
  const { photoDocuments } = useFirestore();

  const [open, setOpen] = useState(false)
  const [message, setMessage] = useState("")
  const [severity, setSeverity] = useState("success")

  function createToast(severity, message){
    setSeverity(severity)
    setMessage(message)
    setOpen(true)
  }

  return (
    <div>
      <Head>
        <title>Photo Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <ActionBar createToast={createToast} />
        {photoDocuments ? (
          <PhotoGallery photoDocuments={photoDocuments} createToast={createToast} />
        ) : (
          <PhotoGallery photoDocuments={ssrPhotoDocs} createToast={createToast} />
        )}
        <Snackbar open={open} onClose={()=> setOpen(false)} autoHideDuration={3000} >
        <Alert severity={severity} variant="filled" >
          {message}
        </Alert>
      </Snackbar>
      </main>
    </div>
  );
}
