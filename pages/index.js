import { collection, getDocs } from "firebase/firestore";
import Head from "next/head";
import { useState } from "react";
import ActionBar from "../components/ActionBar";
import Photo from "../components/Photo";
import { useModal } from "../context/ModalContext";
import { db } from "../firebaseConfig";
import { useFirestore } from "../context/FirestoreContext";

export async function getServerSideProps() {
  const collectionRef = collection(db, "photos");
  const data = await getDocs(collectionRef);
  const photoDocs = data.docs.map((doc) => {
    return { ...doc.data(), id: doc.id };
  });

  return {
    props: {
      ssrPhotoDocs: photoDocs,
    },
  };
}

export default function Home({ ssrPhotoDocs }) {
  const { Modal, modalState } = useModal();
  const { photoDocuments } = useFirestore();

  return (
    <div>
      <Head>
        <title>Photo Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {console.log("photo context: ", photoDocuments)}

      <main>
        {modalState && <Modal />}
        <ActionBar />
        <div
          className={`flex flex-col lg:flex-row flex-wrap justify-evenly items-center`}
        >
          <Photo imageUrl={"/space-img.jpg"} title={"Static Placeholder"} />
          <Photo imageUrl={"/space-img.jpg"} title={"Static Placeholder"} />
          <Photo imageUrl={"/space-img.jpg"} title={"Static Placeholder"} />
          <Photo imageUrl={"/space-img.jpg"} title={"Static Placeholder"} />
          <Photo imageUrl={"/space-img.jpg"} title={"Static Placeholder"} />

          {photoDocuments
            ? photoDocuments.map((document) => {
                return (
                  <Photo
                    key={document.id}
                    imageUrl={document.imageUrl}
                    title={document.title}
                  />
                );
              })
            : ssrPhotoDocs.map((document) => {
                return (
                  <Photo
                    key={document.id}
                    imageUrl={document.imageUrl}
                    title={document.title + "ssr rendered"}
                  />
                );
              })}
        </div>
      </main>
    </div>
  );
}
